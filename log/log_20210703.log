resnet56 Quantization 1
2021年 07月 03日 星期六 09:21:15 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
----------------------------------------------------------
resnet56 Quantization 1
2021年 07月 03日 星期六 09:29:38 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([144, 32])
Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.3.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.3.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.4.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.4.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.5.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.5.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.6.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.6.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.7.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.7.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.8.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.8.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([288, 64])
Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.3.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.3.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.4.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.4.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.5.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.5.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.6.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.6.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.7.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.7.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.8.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.8.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
#################result####################
Compressed model size: 1.8028MB
Compress Coef: 1.81
Compressed time: 2.38s.
----------------------------------------------------------
resnet56 Quantization 1
2021年 07月 03日 星期六 09:33:52 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([288, 16])
----------------------------------------------------------
resnet56 Quantization 1
2021年 07月 03日 星期六 09:35:52 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([288, 16])
----------------------------------------------------------
resnet56 Quantization 1
2021年 07月 03日 星期六 09:39:28 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.3.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.3.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.4.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.4.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.5.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.5.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.6.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.6.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.7.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.7.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.8.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer1.8.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([288, 16])
original shape: torch.Size([288, 16])
----------------------------------------------------------
resnet56 Quantization 1
2021年 07月 03日 星期六 09:41:01 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.3.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.3.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.4.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.4.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.5.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.5.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.6.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.6.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.7.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.7.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.8.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.8.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([288, 16])
original shape: torch.Size([288, 16])
C out : 32 , C in : 16 , k : 3 .
----------------------------------------------------------
resnet56 Quantization 1
2021年 07月 03日 星期六 09:46:54 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.3.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.3.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.4.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.4.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.5.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.5.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.6.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.6.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.7.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.7.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.8.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.8.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([288, 16])
original shape: torch.Size([288, 16])
C out : 32 , C in : 16 , k : 3 .
Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.3.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.3.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.4.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.4.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.5.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.5.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.6.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.6.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.7.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.7.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.8.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.8.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([576, 32])
original shape: torch.Size([576, 32])
C out : 64 , C in : 32 , k : 3 .
Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.3.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.3.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.4.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.4.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.5.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.5.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.6.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.6.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.7.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.7.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.8.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.8.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
original shape: torch.Size([64, 10])
#################result####################
Compressed model size: 1.8404MB
Compress Coef: 1.77
Compressed time: 2.36s.
----------------------------------------------------------
resnet56 Quantization 1
2021年 07月 03日 星期六 09:47:46 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.3.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.3.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.4.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.4.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.5.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.5.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.6.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.6.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.7.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.7.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.8.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer1.8.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
original shape: torch.Size([144, 16])
C out : 16 , C in : 16 , k : 3 .
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([288, 16])
original shape: torch.Size([288, 16])
C out : 32 , C in : 16 , k : 3 .
Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.3.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.3.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.4.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.4.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.5.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.5.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.6.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.6.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.7.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.7.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.8.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer2.8.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
original shape: torch.Size([288, 32])
C out : 32 , C in : 32 , k : 3 .
Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([576, 32])
original shape: torch.Size([576, 32])
C out : 64 , C in : 32 , k : 3 .
Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.3.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.3.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.4.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.4.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.5.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.5.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.6.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.6.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.7.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.7.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.8.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: layer3.8.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
original shape: torch.Size([576, 64])
C out : 64 , C in : 64 , k : 3 .
Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
original shape: torch.Size([64, 10])
#################result####################
Compressed model size: 1.8404MB
Compress Coef: 1.77
Compressed time: 2.22s.
Test: [0/79]	Acc@1 92.969 (92.969)	Acc@5 100.000 (100.000)
Test: [1/79]	Acc@1 92.969 (92.969)	Acc@5 99.219 (99.609)
Test: [2/79]	Acc@1 93.750 (93.229)	Acc@5 100.000 (99.740)
Test: [3/79]	Acc@1 92.188 (92.969)	Acc@5 100.000 (99.805)
Test: [4/79]	Acc@1 92.188 (92.812)	Acc@5 100.000 (99.844)
Test: [5/79]	Acc@1 94.531 (93.099)	Acc@5 100.000 (99.870)
Test: [6/79]	Acc@1 92.969 (93.080)	Acc@5 98.438 (99.665)
Test: [7/79]	Acc@1 96.875 (93.555)	Acc@5 100.000 (99.707)
Test: [8/79]	Acc@1 87.500 (92.882)	Acc@5 99.219 (99.653)
Test: [9/79]	Acc@1 94.531 (93.047)	Acc@5 100.000 (99.688)
Test: [10/79]	Acc@1 90.625 (92.827)	Acc@5 100.000 (99.716)
Test: [11/79]	Acc@1 93.750 (92.904)	Acc@5 100.000 (99.740)
Test: [12/79]	Acc@1 93.750 (92.969)	Acc@5 100.000 (99.760)
Test: [13/79]	Acc@1 94.531 (93.080)	Acc@5 100.000 (99.777)
Test: [14/79]	Acc@1 94.531 (93.177)	Acc@5 100.000 (99.792)
Test: [15/79]	Acc@1 91.406 (93.066)	Acc@5 100.000 (99.805)
Test: [16/79]	Acc@1 91.406 (92.969)	Acc@5 100.000 (99.816)
Test: [17/79]	Acc@1 94.531 (93.056)	Acc@5 98.438 (99.740)
Test: [18/79]	Acc@1 96.094 (93.215)	Acc@5 100.000 (99.753)
Test: [19/79]	Acc@1 95.312 (93.320)	Acc@5 100.000 (99.766)
Test: [20/79]	Acc@1 90.625 (93.192)	Acc@5 100.000 (99.777)
Test: [21/79]	Acc@1 96.875 (93.359)	Acc@5 100.000 (99.787)
Test: [22/79]	Acc@1 90.625 (93.240)	Acc@5 99.219 (99.762)
Test: [23/79]	Acc@1 89.844 (93.099)	Acc@5 100.000 (99.772)
Test: [24/79]	Acc@1 93.750 (93.125)	Acc@5 100.000 (99.781)
Test: [25/79]	Acc@1 94.531 (93.179)	Acc@5 100.000 (99.790)
Test: [26/79]	Acc@1 94.531 (93.229)	Acc@5 100.000 (99.797)
Test: [27/79]	Acc@1 92.188 (93.192)	Acc@5 100.000 (99.805)
Test: [28/79]	Acc@1 90.625 (93.103)	Acc@5 97.656 (99.731)
Test: [29/79]	Acc@1 89.844 (92.995)	Acc@5 100.000 (99.740)
Test: [30/79]	Acc@1 96.094 (93.095)	Acc@5 99.219 (99.723)
Test: [31/79]	Acc@1 94.531 (93.140)	Acc@5 100.000 (99.731)
Test: [32/79]	Acc@1 93.750 (93.158)	Acc@5 100.000 (99.740)
Test: [33/79]	Acc@1 95.312 (93.222)	Acc@5 100.000 (99.747)
Test: [34/79]	Acc@1 92.188 (93.192)	Acc@5 100.000 (99.754)
Test: [35/79]	Acc@1 94.531 (93.229)	Acc@5 99.219 (99.740)
Test: [36/79]	Acc@1 92.969 (93.222)	Acc@5 98.438 (99.704)
Test: [37/79]	Acc@1 94.531 (93.257)	Acc@5 100.000 (99.712)
Test: [38/79]	Acc@1 92.188 (93.229)	Acc@5 100.000 (99.720)
Test: [39/79]	Acc@1 91.406 (93.184)	Acc@5 99.219 (99.707)
Test: [40/79]	Acc@1 93.750 (93.197)	Acc@5 99.219 (99.695)
Test: [41/79]	Acc@1 95.312 (93.248)	Acc@5 100.000 (99.702)
Test: [42/79]	Acc@1 94.531 (93.278)	Acc@5 100.000 (99.709)
Test: [43/79]	Acc@1 92.188 (93.253)	Acc@5 100.000 (99.716)
Test: [44/79]	Acc@1 93.750 (93.264)	Acc@5 100.000 (99.722)
Test: [45/79]	Acc@1 91.406 (93.224)	Acc@5 99.219 (99.711)
Test: [46/79]	Acc@1 92.969 (93.218)	Acc@5 100.000 (99.717)
Test: [47/79]	Acc@1 93.750 (93.229)	Acc@5 98.438 (99.691)
Test: [48/79]	Acc@1 95.312 (93.272)	Acc@5 100.000 (99.697)
Test: [49/79]	Acc@1 92.969 (93.266)	Acc@5 100.000 (99.703)
Test: [50/79]	Acc@1 92.188 (93.244)	Acc@5 99.219 (99.694)
Test: [51/79]	Acc@1 88.281 (93.149)	Acc@5 100.000 (99.700)
Test: [52/79]	Acc@1 92.188 (93.131)	Acc@5 100.000 (99.705)
Test: [53/79]	Acc@1 93.750 (93.142)	Acc@5 98.438 (99.682)
Test: [54/79]	Acc@1 90.625 (93.097)	Acc@5 98.438 (99.659)
Test: [55/79]	Acc@1 95.312 (93.136)	Acc@5 100.000 (99.665)
Test: [56/79]	Acc@1 92.188 (93.120)	Acc@5 100.000 (99.671)
Test: [57/79]	Acc@1 94.531 (93.144)	Acc@5 100.000 (99.677)
Test: [58/79]	Acc@1 96.875 (93.207)	Acc@5 100.000 (99.682)
Test: [59/79]	Acc@1 93.750 (93.216)	Acc@5 100.000 (99.688)
Test: [60/79]	Acc@1 98.438 (93.302)	Acc@5 100.000 (99.693)
Test: [61/79]	Acc@1 93.750 (93.309)	Acc@5 100.000 (99.698)
Test: [62/79]	Acc@1 95.312 (93.341)	Acc@5 99.219 (99.690)
Test: [63/79]	Acc@1 94.531 (93.359)	Acc@5 100.000 (99.695)
Test: [64/79]	Acc@1 91.406 (93.329)	Acc@5 99.219 (99.688)
Test: [65/79]	Acc@1 92.188 (93.312)	Acc@5 100.000 (99.692)
Test: [66/79]	Acc@1 90.625 (93.272)	Acc@5 99.219 (99.685)
Test: [67/79]	Acc@1 92.969 (93.267)	Acc@5 99.219 (99.678)
Test: [68/79]	Acc@1 94.531 (93.286)	Acc@5 99.219 (99.672)
Test: [69/79]	Acc@1 92.969 (93.281)	Acc@5 100.000 (99.676)
Test: [70/79]	Acc@1 89.062 (93.222)	Acc@5 100.000 (99.681)
Test: [71/79]	Acc@1 91.406 (93.197)	Acc@5 99.219 (99.674)
Test: [72/79]	Acc@1 92.969 (93.193)	Acc@5 100.000 (99.679)
Test: [73/79]	Acc@1 93.750 (93.201)	Acc@5 100.000 (99.683)
Test: [74/79]	Acc@1 93.750 (93.208)	Acc@5 100.000 (99.688)
Test: [75/79]	Acc@1 92.969 (93.205)	Acc@5 100.000 (99.692)
Test: [76/79]	Acc@1 96.094 (93.243)	Acc@5 100.000 (99.696)
Test: [77/79]	Acc@1 91.406 (93.219)	Acc@5 100.000 (99.700)
Test: [78/79]	Acc@1 93.750 (93.220)	Acc@5 100.000 (99.700)
Top1 after quantization: 93.220, Top5 after quantization: 99.700

----------------------------------------------------------
resnet56 Quantization 1
2021年 07月 03日 星期六 09:49:48 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([144, 32])
Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.3.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.3.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.4.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.4.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.5.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.5.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.6.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.6.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.7.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.7.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.8.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.8.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([288, 64])
Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.3.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.3.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.4.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.4.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.5.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.5.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.6.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.6.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.7.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.7.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.8.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.8.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
#################result####################
Compressed model size: 1.8028MB
Compress Coef: 1.81
Compressed time: 2.64s.
Test: [0/79]	Acc@1 94.531 (94.531)	Acc@5 100.000 (100.000)
Test: [1/79]	Acc@1 92.969 (93.750)	Acc@5 99.219 (99.609)
Test: [2/79]	Acc@1 93.750 (93.750)	Acc@5 99.219 (99.479)
Test: [3/79]	Acc@1 93.750 (93.750)	Acc@5 100.000 (99.609)
Test: [4/79]	Acc@1 91.406 (93.281)	Acc@5 99.219 (99.531)
Test: [5/79]	Acc@1 94.531 (93.490)	Acc@5 99.219 (99.479)
Test: [6/79]	Acc@1 94.531 (93.638)	Acc@5 99.219 (99.442)
Test: [7/79]	Acc@1 94.531 (93.750)	Acc@5 100.000 (99.512)
Test: [8/79]	Acc@1 93.750 (93.750)	Acc@5 100.000 (99.566)
Test: [9/79]	Acc@1 95.312 (93.906)	Acc@5 100.000 (99.609)
Test: [10/79]	Acc@1 92.188 (93.750)	Acc@5 100.000 (99.645)
Test: [11/79]	Acc@1 92.188 (93.620)	Acc@5 100.000 (99.674)
Test: [12/79]	Acc@1 95.312 (93.750)	Acc@5 99.219 (99.639)
Test: [13/79]	Acc@1 90.625 (93.527)	Acc@5 100.000 (99.665)
Test: [14/79]	Acc@1 94.531 (93.594)	Acc@5 100.000 (99.688)
Test: [15/79]	Acc@1 94.531 (93.652)	Acc@5 100.000 (99.707)
Test: [16/79]	Acc@1 92.188 (93.566)	Acc@5 99.219 (99.678)
Test: [17/79]	Acc@1 94.531 (93.620)	Acc@5 100.000 (99.696)
Test: [18/79]	Acc@1 92.188 (93.544)	Acc@5 99.219 (99.671)
Test: [19/79]	Acc@1 94.531 (93.594)	Acc@5 99.219 (99.648)
Test: [20/79]	Acc@1 92.969 (93.564)	Acc@5 99.219 (99.628)
Test: [21/79]	Acc@1 94.531 (93.608)	Acc@5 100.000 (99.645)
Test: [22/79]	Acc@1 93.750 (93.614)	Acc@5 100.000 (99.660)
Test: [23/79]	Acc@1 93.750 (93.620)	Acc@5 99.219 (99.642)
Test: [24/79]	Acc@1 92.188 (93.562)	Acc@5 100.000 (99.656)
Test: [25/79]	Acc@1 92.188 (93.510)	Acc@5 100.000 (99.669)
Test: [26/79]	Acc@1 92.969 (93.490)	Acc@5 99.219 (99.653)
Test: [27/79]	Acc@1 93.750 (93.499)	Acc@5 99.219 (99.637)
Test: [28/79]	Acc@1 94.531 (93.534)	Acc@5 100.000 (99.650)
Test: [29/79]	Acc@1 95.312 (93.594)	Acc@5 99.219 (99.635)
Test: [30/79]	Acc@1 94.531 (93.624)	Acc@5 99.219 (99.622)
Test: [31/79]	Acc@1 92.188 (93.579)	Acc@5 99.219 (99.609)
Test: [32/79]	Acc@1 92.969 (93.561)	Acc@5 100.000 (99.621)
Test: [33/79]	Acc@1 93.750 (93.566)	Acc@5 100.000 (99.632)
Test: [34/79]	Acc@1 92.188 (93.527)	Acc@5 100.000 (99.643)
Test: [35/79]	Acc@1 95.312 (93.576)	Acc@5 99.219 (99.631)
Test: [36/79]	Acc@1 91.406 (93.518)	Acc@5 100.000 (99.641)
Test: [37/79]	Acc@1 93.750 (93.524)	Acc@5 100.000 (99.650)
Test: [38/79]	Acc@1 92.188 (93.490)	Acc@5 99.219 (99.639)
Test: [39/79]	Acc@1 89.062 (93.379)	Acc@5 100.000 (99.648)
Test: [40/79]	Acc@1 89.844 (93.293)	Acc@5 99.219 (99.638)
Test: [41/79]	Acc@1 87.500 (93.155)	Acc@5 100.000 (99.647)
Test: [42/79]	Acc@1 95.312 (93.205)	Acc@5 100.000 (99.655)
Test: [43/79]	Acc@1 95.312 (93.253)	Acc@5 100.000 (99.663)
Test: [44/79]	Acc@1 93.750 (93.264)	Acc@5 100.000 (99.670)
Test: [45/79]	Acc@1 92.969 (93.257)	Acc@5 100.000 (99.677)
Test: [46/79]	Acc@1 92.969 (93.251)	Acc@5 100.000 (99.684)
Test: [47/79]	Acc@1 92.188 (93.229)	Acc@5 99.219 (99.674)
Test: [48/79]	Acc@1 90.625 (93.176)	Acc@5 100.000 (99.681)
Test: [49/79]	Acc@1 94.531 (93.203)	Acc@5 100.000 (99.688)
Test: [50/79]	Acc@1 95.312 (93.244)	Acc@5 99.219 (99.678)
Test: [51/79]	Acc@1 97.656 (93.329)	Acc@5 100.000 (99.684)
Test: [52/79]	Acc@1 95.312 (93.367)	Acc@5 99.219 (99.676)
Test: [53/79]	Acc@1 89.844 (93.302)	Acc@5 98.438 (99.653)
Test: [54/79]	Acc@1 94.531 (93.324)	Acc@5 100.000 (99.659)
Test: [55/79]	Acc@1 92.188 (93.304)	Acc@5 100.000 (99.665)
Test: [56/79]	Acc@1 92.969 (93.298)	Acc@5 100.000 (99.671)
Test: [57/79]	Acc@1 93.750 (93.305)	Acc@5 100.000 (99.677)
Test: [58/79]	Acc@1 94.531 (93.326)	Acc@5 100.000 (99.682)
Test: [59/79]	Acc@1 92.969 (93.320)	Acc@5 100.000 (99.688)
Test: [60/79]	Acc@1 95.312 (93.353)	Acc@5 100.000 (99.693)
Test: [61/79]	Acc@1 95.312 (93.385)	Acc@5 100.000 (99.698)
Test: [62/79]	Acc@1 93.750 (93.390)	Acc@5 100.000 (99.702)
Test: [63/79]	Acc@1 92.969 (93.384)	Acc@5 99.219 (99.695)
Test: [64/79]	Acc@1 95.312 (93.413)	Acc@5 100.000 (99.700)
Test: [65/79]	Acc@1 93.750 (93.419)	Acc@5 100.000 (99.704)
Test: [66/79]	Acc@1 97.656 (93.482)	Acc@5 100.000 (99.708)
Test: [67/79]	Acc@1 91.406 (93.451)	Acc@5 100.000 (99.713)
Test: [68/79]	Acc@1 88.281 (93.376)	Acc@5 98.438 (99.694)
Test: [69/79]	Acc@1 91.406 (93.348)	Acc@5 99.219 (99.688)
Test: [70/79]	Acc@1 92.969 (93.343)	Acc@5 100.000 (99.692)
Test: [71/79]	Acc@1 95.312 (93.370)	Acc@5 100.000 (99.696)
Test: [72/79]	Acc@1 98.438 (93.440)	Acc@5 100.000 (99.700)
Test: [73/79]	Acc@1 89.062 (93.380)	Acc@5 100.000 (99.704)
Test: [74/79]	Acc@1 92.188 (93.365)	Acc@5 100.000 (99.708)
Test: [75/79]	Acc@1 90.625 (93.329)	Acc@5 99.219 (99.702)
Test: [76/79]	Acc@1 92.969 (93.324)	Acc@5 100.000 (99.706)
Test: [77/79]	Acc@1 90.625 (93.289)	Acc@5 100.000 (99.710)
Test: [78/79]	Acc@1 93.750 (93.290)	Acc@5 100.000 (99.710)
Top1 after quantization: 93.290, Top5 after quantization: 99.710

----------------------------------------------------------
resnet56 Quantization 1
2021年 07月 03日 星期六 09:56:32 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 55
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.3.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.4.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.5.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.6.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.7.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.8.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([144, 32])
Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.3.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.3.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.4.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.4.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.5.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.5.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.6.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.6.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.7.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.7.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.8.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.8.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([288, 64])
Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.3.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.3.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.4.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.4.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.5.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.5.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.6.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.6.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.7.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.7.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.8.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.8.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
#################result####################
Compressed model size: 1.8028MB
Compress Coef: 1.81
Compressed time: 2.22s.
Test: [0/79]	Acc@1 94.531 (94.531)	Acc@5 100.000 (100.000)
Test: [1/79]	Acc@1 92.969 (93.750)	Acc@5 99.219 (99.609)
Test: [2/79]	Acc@1 93.750 (93.750)	Acc@5 99.219 (99.479)
Test: [3/79]	Acc@1 93.750 (93.750)	Acc@5 100.000 (99.609)
Test: [4/79]	Acc@1 91.406 (93.281)	Acc@5 99.219 (99.531)
Test: [5/79]	Acc@1 94.531 (93.490)	Acc@5 99.219 (99.479)
Test: [6/79]	Acc@1 94.531 (93.638)	Acc@5 99.219 (99.442)
Test: [7/79]	Acc@1 94.531 (93.750)	Acc@5 100.000 (99.512)
Test: [8/79]	Acc@1 93.750 (93.750)	Acc@5 100.000 (99.566)
Test: [9/79]	Acc@1 95.312 (93.906)	Acc@5 100.000 (99.609)
Test: [10/79]	Acc@1 92.188 (93.750)	Acc@5 100.000 (99.645)
Test: [11/79]	Acc@1 92.188 (93.620)	Acc@5 100.000 (99.674)
Test: [12/79]	Acc@1 95.312 (93.750)	Acc@5 99.219 (99.639)
Test: [13/79]	Acc@1 90.625 (93.527)	Acc@5 100.000 (99.665)
Test: [14/79]	Acc@1 94.531 (93.594)	Acc@5 100.000 (99.688)
Test: [15/79]	Acc@1 94.531 (93.652)	Acc@5 100.000 (99.707)
Test: [16/79]	Acc@1 92.188 (93.566)	Acc@5 99.219 (99.678)
Test: [17/79]	Acc@1 94.531 (93.620)	Acc@5 100.000 (99.696)
Test: [18/79]	Acc@1 92.188 (93.544)	Acc@5 99.219 (99.671)
Test: [19/79]	Acc@1 94.531 (93.594)	Acc@5 99.219 (99.648)
Test: [20/79]	Acc@1 92.969 (93.564)	Acc@5 99.219 (99.628)
Test: [21/79]	Acc@1 94.531 (93.608)	Acc@5 100.000 (99.645)
Test: [22/79]	Acc@1 93.750 (93.614)	Acc@5 100.000 (99.660)
Test: [23/79]	Acc@1 93.750 (93.620)	Acc@5 99.219 (99.642)
Test: [24/79]	Acc@1 92.188 (93.562)	Acc@5 100.000 (99.656)
Test: [25/79]	Acc@1 92.188 (93.510)	Acc@5 100.000 (99.669)
Test: [26/79]	Acc@1 92.969 (93.490)	Acc@5 99.219 (99.653)
Test: [27/79]	Acc@1 93.750 (93.499)	Acc@5 99.219 (99.637)
Test: [28/79]	Acc@1 94.531 (93.534)	Acc@5 100.000 (99.650)
Test: [29/79]	Acc@1 95.312 (93.594)	Acc@5 99.219 (99.635)
Test: [30/79]	Acc@1 94.531 (93.624)	Acc@5 99.219 (99.622)
Test: [31/79]	Acc@1 92.188 (93.579)	Acc@5 99.219 (99.609)
Test: [32/79]	Acc@1 92.969 (93.561)	Acc@5 100.000 (99.621)
Test: [33/79]	Acc@1 93.750 (93.566)	Acc@5 100.000 (99.632)
Test: [34/79]	Acc@1 92.188 (93.527)	Acc@5 100.000 (99.643)
Test: [35/79]	Acc@1 95.312 (93.576)	Acc@5 99.219 (99.631)
Test: [36/79]	Acc@1 91.406 (93.518)	Acc@5 100.000 (99.641)
Test: [37/79]	Acc@1 93.750 (93.524)	Acc@5 100.000 (99.650)
Test: [38/79]	Acc@1 92.188 (93.490)	Acc@5 99.219 (99.639)
Test: [39/79]	Acc@1 89.062 (93.379)	Acc@5 100.000 (99.648)
Test: [40/79]	Acc@1 89.844 (93.293)	Acc@5 99.219 (99.638)
Test: [41/79]	Acc@1 87.500 (93.155)	Acc@5 100.000 (99.647)
Test: [42/79]	Acc@1 95.312 (93.205)	Acc@5 100.000 (99.655)
Test: [43/79]	Acc@1 95.312 (93.253)	Acc@5 100.000 (99.663)
Test: [44/79]	Acc@1 93.750 (93.264)	Acc@5 100.000 (99.670)
Test: [45/79]	Acc@1 92.969 (93.257)	Acc@5 100.000 (99.677)
Test: [46/79]	Acc@1 92.969 (93.251)	Acc@5 100.000 (99.684)
Test: [47/79]	Acc@1 92.188 (93.229)	Acc@5 99.219 (99.674)
Test: [48/79]	Acc@1 90.625 (93.176)	Acc@5 100.000 (99.681)
Test: [49/79]	Acc@1 94.531 (93.203)	Acc@5 100.000 (99.688)
Test: [50/79]	Acc@1 95.312 (93.244)	Acc@5 99.219 (99.678)
Test: [51/79]	Acc@1 97.656 (93.329)	Acc@5 100.000 (99.684)
Test: [52/79]	Acc@1 95.312 (93.367)	Acc@5 99.219 (99.676)
Test: [53/79]	Acc@1 89.844 (93.302)	Acc@5 98.438 (99.653)
Test: [54/79]	Acc@1 94.531 (93.324)	Acc@5 100.000 (99.659)
Test: [55/79]	Acc@1 92.188 (93.304)	Acc@5 100.000 (99.665)
Test: [56/79]	Acc@1 92.969 (93.298)	Acc@5 100.000 (99.671)
Test: [57/79]	Acc@1 93.750 (93.305)	Acc@5 100.000 (99.677)
Test: [58/79]	Acc@1 94.531 (93.326)	Acc@5 100.000 (99.682)
Test: [59/79]	Acc@1 92.969 (93.320)	Acc@5 100.000 (99.688)
Test: [60/79]	Acc@1 95.312 (93.353)	Acc@5 100.000 (99.693)
Test: [61/79]	Acc@1 95.312 (93.385)	Acc@5 100.000 (99.698)
Test: [62/79]	Acc@1 93.750 (93.390)	Acc@5 100.000 (99.702)
Test: [63/79]	Acc@1 92.969 (93.384)	Acc@5 99.219 (99.695)
Test: [64/79]	Acc@1 95.312 (93.413)	Acc@5 100.000 (99.700)
Test: [65/79]	Acc@1 93.750 (93.419)	Acc@5 100.000 (99.704)
Test: [66/79]	Acc@1 97.656 (93.482)	Acc@5 100.000 (99.708)
Test: [67/79]	Acc@1 91.406 (93.451)	Acc@5 100.000 (99.713)
Test: [68/79]	Acc@1 88.281 (93.376)	Acc@5 98.438 (99.694)
Test: [69/79]	Acc@1 91.406 (93.348)	Acc@5 99.219 (99.688)
Test: [70/79]	Acc@1 92.969 (93.343)	Acc@5 100.000 (99.692)
Test: [71/79]	Acc@1 95.312 (93.370)	Acc@5 100.000 (99.696)
Test: [72/79]	Acc@1 98.438 (93.440)	Acc@5 100.000 (99.700)
Test: [73/79]	Acc@1 89.062 (93.380)	Acc@5 100.000 (99.704)
Test: [74/79]	Acc@1 92.188 (93.365)	Acc@5 100.000 (99.708)
Test: [75/79]	Acc@1 90.625 (93.329)	Acc@5 99.219 (99.702)
Test: [76/79]	Acc@1 92.969 (93.324)	Acc@5 100.000 (99.706)
Test: [77/79]	Acc@1 90.625 (93.289)	Acc@5 100.000 (99.710)
Test: [78/79]	Acc@1 93.750 (93.290)	Acc@5 100.000 (99.710)
Top1 after quantization: 93.290, Top5 after quantization: 99.710

----------------------------------------------------------
resnet20 Quantization 1
2021年 07月 03日 星期六 09:57:29 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 19
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([144, 32])
Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([288, 64])
Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
#################result####################
Compressed model size: 0.5665MB
Compress Coef: 1.82
Compressed time: 0.77s.
Test: [0/79]	Acc@1 94.531 (94.531)	Acc@5 100.000 (100.000)
Test: [1/79]	Acc@1 91.406 (92.969)	Acc@5 99.219 (99.609)
Test: [2/79]	Acc@1 91.406 (92.448)	Acc@5 99.219 (99.479)
Test: [3/79]	Acc@1 95.312 (93.164)	Acc@5 99.219 (99.414)
Test: [4/79]	Acc@1 92.188 (92.969)	Acc@5 99.219 (99.375)
Test: [5/79]	Acc@1 92.969 (92.969)	Acc@5 100.000 (99.479)
Test: [6/79]	Acc@1 94.531 (93.192)	Acc@5 99.219 (99.442)
Test: [7/79]	Acc@1 95.312 (93.457)	Acc@5 100.000 (99.512)
Test: [8/79]	Acc@1 89.062 (92.969)	Acc@5 97.656 (99.306)
Test: [9/79]	Acc@1 88.281 (92.500)	Acc@5 99.219 (99.297)
Test: [10/79]	Acc@1 96.094 (92.827)	Acc@5 99.219 (99.290)
Test: [11/79]	Acc@1 88.281 (92.448)	Acc@5 100.000 (99.349)
Test: [12/79]	Acc@1 92.969 (92.488)	Acc@5 100.000 (99.399)
Test: [13/79]	Acc@1 89.062 (92.243)	Acc@5 100.000 (99.442)
Test: [14/79]	Acc@1 89.062 (92.031)	Acc@5 100.000 (99.479)
Test: [15/79]	Acc@1 93.750 (92.139)	Acc@5 100.000 (99.512)
Test: [16/79]	Acc@1 92.969 (92.188)	Acc@5 100.000 (99.540)
Test: [17/79]	Acc@1 88.281 (91.970)	Acc@5 98.438 (99.479)
Test: [18/79]	Acc@1 90.625 (91.900)	Acc@5 100.000 (99.507)
Test: [19/79]	Acc@1 92.969 (91.953)	Acc@5 100.000 (99.531)
Test: [20/79]	Acc@1 90.625 (91.890)	Acc@5 99.219 (99.516)
Test: [21/79]	Acc@1 94.531 (92.010)	Acc@5 100.000 (99.538)
Test: [22/79]	Acc@1 95.312 (92.154)	Acc@5 99.219 (99.524)
Test: [23/79]	Acc@1 92.188 (92.155)	Acc@5 100.000 (99.544)
Test: [24/79]	Acc@1 89.844 (92.062)	Acc@5 100.000 (99.562)
Test: [25/79]	Acc@1 91.406 (92.037)	Acc@5 98.438 (99.519)
Test: [26/79]	Acc@1 89.062 (91.927)	Acc@5 99.219 (99.508)
Test: [27/79]	Acc@1 89.844 (91.853)	Acc@5 99.219 (99.498)
Test: [28/79]	Acc@1 93.750 (91.918)	Acc@5 100.000 (99.515)
Test: [29/79]	Acc@1 93.750 (91.979)	Acc@5 99.219 (99.505)
Test: [30/79]	Acc@1 93.750 (92.036)	Acc@5 99.219 (99.496)
Test: [31/79]	Acc@1 96.094 (92.163)	Acc@5 100.000 (99.512)
Test: [32/79]	Acc@1 90.625 (92.116)	Acc@5 100.000 (99.527)
Test: [33/79]	Acc@1 91.406 (92.096)	Acc@5 99.219 (99.517)
Test: [34/79]	Acc@1 92.188 (92.098)	Acc@5 100.000 (99.531)
Test: [35/79]	Acc@1 89.062 (92.014)	Acc@5 100.000 (99.544)
Test: [36/79]	Acc@1 91.406 (91.997)	Acc@5 99.219 (99.535)
Test: [37/79]	Acc@1 91.406 (91.982)	Acc@5 100.000 (99.548)
Test: [38/79]	Acc@1 90.625 (91.947)	Acc@5 99.219 (99.539)
Test: [39/79]	Acc@1 86.719 (91.816)	Acc@5 100.000 (99.551)
Test: [40/79]	Acc@1 89.062 (91.749)	Acc@5 99.219 (99.543)
Test: [41/79]	Acc@1 89.844 (91.704)	Acc@5 98.438 (99.516)
Test: [42/79]	Acc@1 85.938 (91.570)	Acc@5 100.000 (99.528)
Test: [43/79]	Acc@1 90.625 (91.548)	Acc@5 100.000 (99.538)
Test: [44/79]	Acc@1 90.625 (91.528)	Acc@5 100.000 (99.549)
Test: [45/79]	Acc@1 94.531 (91.593)	Acc@5 100.000 (99.558)
Test: [46/79]	Acc@1 92.969 (91.622)	Acc@5 100.000 (99.568)
Test: [47/79]	Acc@1 92.969 (91.650)	Acc@5 100.000 (99.577)
Test: [48/79]	Acc@1 89.844 (91.614)	Acc@5 99.219 (99.570)
Test: [49/79]	Acc@1 88.281 (91.547)	Acc@5 100.000 (99.578)
Test: [50/79]	Acc@1 92.188 (91.559)	Acc@5 100.000 (99.586)
Test: [51/79]	Acc@1 89.844 (91.526)	Acc@5 100.000 (99.594)
Test: [52/79]	Acc@1 95.312 (91.598)	Acc@5 99.219 (99.587)
Test: [53/79]	Acc@1 93.750 (91.638)	Acc@5 100.000 (99.595)
Test: [54/79]	Acc@1 89.062 (91.591)	Acc@5 100.000 (99.602)
Test: [55/79]	Acc@1 89.844 (91.560)	Acc@5 99.219 (99.595)
Test: [56/79]	Acc@1 89.062 (91.516)	Acc@5 100.000 (99.603)
Test: [57/79]	Acc@1 92.969 (91.541)	Acc@5 100.000 (99.609)
Test: [58/79]	Acc@1 89.062 (91.499)	Acc@5 99.219 (99.603)
Test: [59/79]	Acc@1 90.625 (91.484)	Acc@5 100.000 (99.609)
Test: [60/79]	Acc@1 92.188 (91.496)	Acc@5 100.000 (99.616)
Test: [61/79]	Acc@1 90.625 (91.482)	Acc@5 100.000 (99.622)
Test: [62/79]	Acc@1 90.625 (91.468)	Acc@5 100.000 (99.628)
Test: [63/79]	Acc@1 89.844 (91.443)	Acc@5 99.219 (99.622)
Test: [64/79]	Acc@1 91.406 (91.442)	Acc@5 100.000 (99.627)
Test: [65/79]	Acc@1 94.531 (91.489)	Acc@5 100.000 (99.633)
Test: [66/79]	Acc@1 89.844 (91.465)	Acc@5 100.000 (99.639)
Test: [67/79]	Acc@1 92.969 (91.487)	Acc@5 100.000 (99.644)
Test: [68/79]	Acc@1 91.406 (91.486)	Acc@5 100.000 (99.649)
Test: [69/79]	Acc@1 89.062 (91.451)	Acc@5 100.000 (99.654)
Test: [70/79]	Acc@1 90.625 (91.439)	Acc@5 98.438 (99.637)
Test: [71/79]	Acc@1 95.312 (91.493)	Acc@5 100.000 (99.642)
Test: [72/79]	Acc@1 89.062 (91.460)	Acc@5 99.219 (99.636)
Test: [73/79]	Acc@1 96.094 (91.522)	Acc@5 100.000 (99.641)
Test: [74/79]	Acc@1 90.625 (91.510)	Acc@5 100.000 (99.646)
Test: [75/79]	Acc@1 86.719 (91.447)	Acc@5 100.000 (99.650)
Test: [76/79]	Acc@1 91.406 (91.447)	Acc@5 100.000 (99.655)
Test: [77/79]	Acc@1 90.625 (91.436)	Acc@5 99.219 (99.649)
Test: [78/79]	Acc@1 100.000 (91.450)	Acc@5 100.000 (99.650)
Top1 after quantization: 91.450, Top5 after quantization: 99.650

----------------------------------------------------------
resnet18 Quantization 1
2021年 07月 03日 星期六 09:57:58 CST
---------------Dataset: imagenet--------------
layer number: 20
Layer: layer1.0.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer1.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer1.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer1.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer2.0.conv1, layer shape: torch.Size([128, 64, 3, 3]), uncompressed layer size: 0.281250MB. 
layer shape (after reshape): torch.Size([576, 128])
Layer: layer2.0.conv2, layer shape: torch.Size([128, 128, 3, 3]), uncompressed layer size: 0.562500MB. 
layer shape (after reshape): torch.Size([1152, 128])
Layer: layer2.0.downsample.0, layer shape: torch.Size([128, 64, 1, 1]), uncompressed layer size: 0.031250MB. 
layer shape (after reshape): torch.Size([64, 128])
Layer: layer2.1.conv1, layer shape: torch.Size([128, 128, 3, 3]), uncompressed layer size: 0.562500MB. 
layer shape (after reshape): torch.Size([1152, 128])
Layer: layer2.1.conv2, layer shape: torch.Size([128, 128, 3, 3]), uncompressed layer size: 0.562500MB. 
layer shape (after reshape): torch.Size([1152, 128])
Layer: layer3.0.conv1, layer shape: torch.Size([256, 128, 3, 3]), uncompressed layer size: 1.125000MB. 
layer shape (after reshape): torch.Size([1152, 256])
Layer: layer3.0.conv2, layer shape: torch.Size([256, 256, 3, 3]), uncompressed layer size: 2.250000MB. 
layer shape (after reshape): torch.Size([2304, 256])
Layer: layer3.0.downsample.0, layer shape: torch.Size([256, 128, 1, 1]), uncompressed layer size: 0.125000MB. 
layer shape (after reshape): torch.Size([128, 256])
Layer: layer3.1.conv1, layer shape: torch.Size([256, 256, 3, 3]), uncompressed layer size: 2.250000MB. 
layer shape (after reshape): torch.Size([2304, 256])
Layer: layer3.1.conv2, layer shape: torch.Size([256, 256, 3, 3]), uncompressed layer size: 2.250000MB. 
layer shape (after reshape): torch.Size([2304, 256])
Layer: layer4.0.conv1, layer shape: torch.Size([512, 256, 3, 3]), uncompressed layer size: 4.500000MB. 
layer shape (after reshape): torch.Size([2304, 512])
Layer: layer4.0.conv2, layer shape: torch.Size([512, 512, 3, 3]), uncompressed layer size: 9.000000MB. 
layer shape (after reshape): torch.Size([4608, 512])
Layer: layer4.0.downsample.0, layer shape: torch.Size([512, 256, 1, 1]), uncompressed layer size: 0.500000MB. 
layer shape (after reshape): torch.Size([256, 512])
Layer: layer4.1.conv1, layer shape: torch.Size([512, 512, 3, 3]), uncompressed layer size: 9.000000MB. 
layer shape (after reshape): torch.Size([4608, 512])
Layer: layer4.1.conv2, layer shape: torch.Size([512, 512, 3, 3]), uncompressed layer size: 9.000000MB. 
layer shape (after reshape): torch.Size([4608, 512])
Layer: fc, layer shape: torch.Size([1000, 512]), uncompressed layer size: 1.953125MB. 
layer shape (after reshape): torch.Size([512, 1000])
#################result####################
Compressed model size: 14.9148MB
Compress Coef: 2.99
Compressed time: 8.79s.
resnet20 Quantization 1
2021年 07月 03日 星期六 10:00:19 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
----------------------------------------------------------
resnet20 Quantization 1
2021年 07月 03日 星期六 10:13:46 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 19
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([144, 32])
Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([288, 64])
Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
#################result####################
Compressed model size: 0.5665MB
Compress Coef: 1.82
Compressed time: 0.82s.
Test: [0/79]	Acc@1 94.531 (94.531)	Acc@5 100.000 (100.000)
Test: [1/79]	Acc@1 91.406 (92.969)	Acc@5 99.219 (99.609)
Test: [2/79]	Acc@1 91.406 (92.448)	Acc@5 99.219 (99.479)
Test: [3/79]	Acc@1 95.312 (93.164)	Acc@5 99.219 (99.414)
Test: [4/79]	Acc@1 92.188 (92.969)	Acc@5 99.219 (99.375)
Test: [5/79]	Acc@1 92.969 (92.969)	Acc@5 100.000 (99.479)
Test: [6/79]	Acc@1 94.531 (93.192)	Acc@5 99.219 (99.442)
Test: [7/79]	Acc@1 95.312 (93.457)	Acc@5 100.000 (99.512)
Test: [8/79]	Acc@1 89.062 (92.969)	Acc@5 97.656 (99.306)
Test: [9/79]	Acc@1 88.281 (92.500)	Acc@5 99.219 (99.297)
Test: [10/79]	Acc@1 96.094 (92.827)	Acc@5 99.219 (99.290)
Test: [11/79]	Acc@1 88.281 (92.448)	Acc@5 100.000 (99.349)
Test: [12/79]	Acc@1 92.969 (92.488)	Acc@5 100.000 (99.399)
Test: [13/79]	Acc@1 89.062 (92.243)	Acc@5 100.000 (99.442)
Test: [14/79]	Acc@1 89.062 (92.031)	Acc@5 100.000 (99.479)
Test: [15/79]	Acc@1 93.750 (92.139)	Acc@5 100.000 (99.512)
Test: [16/79]	Acc@1 92.969 (92.188)	Acc@5 100.000 (99.540)
Test: [17/79]	Acc@1 88.281 (91.970)	Acc@5 98.438 (99.479)
Test: [18/79]	Acc@1 90.625 (91.900)	Acc@5 100.000 (99.507)
Test: [19/79]	Acc@1 92.969 (91.953)	Acc@5 100.000 (99.531)
Test: [20/79]	Acc@1 90.625 (91.890)	Acc@5 99.219 (99.516)
Test: [21/79]	Acc@1 94.531 (92.010)	Acc@5 100.000 (99.538)
Test: [22/79]	Acc@1 95.312 (92.154)	Acc@5 99.219 (99.524)
Test: [23/79]	Acc@1 92.188 (92.155)	Acc@5 100.000 (99.544)
Test: [24/79]	Acc@1 89.844 (92.062)	Acc@5 100.000 (99.562)
Test: [25/79]	Acc@1 91.406 (92.037)	Acc@5 98.438 (99.519)
Test: [26/79]	Acc@1 89.062 (91.927)	Acc@5 99.219 (99.508)
Test: [27/79]	Acc@1 89.844 (91.853)	Acc@5 99.219 (99.498)
Test: [28/79]	Acc@1 93.750 (91.918)	Acc@5 100.000 (99.515)
Test: [29/79]	Acc@1 93.750 (91.979)	Acc@5 99.219 (99.505)
Test: [30/79]	Acc@1 93.750 (92.036)	Acc@5 99.219 (99.496)
Test: [31/79]	Acc@1 96.094 (92.163)	Acc@5 100.000 (99.512)
Test: [32/79]	Acc@1 90.625 (92.116)	Acc@5 100.000 (99.527)
Test: [33/79]	Acc@1 91.406 (92.096)	Acc@5 99.219 (99.517)
Test: [34/79]	Acc@1 92.188 (92.098)	Acc@5 100.000 (99.531)
Test: [35/79]	Acc@1 89.062 (92.014)	Acc@5 100.000 (99.544)
Test: [36/79]	Acc@1 91.406 (91.997)	Acc@5 99.219 (99.535)
Test: [37/79]	Acc@1 91.406 (91.982)	Acc@5 100.000 (99.548)
Test: [38/79]	Acc@1 90.625 (91.947)	Acc@5 99.219 (99.539)
Test: [39/79]	Acc@1 86.719 (91.816)	Acc@5 100.000 (99.551)
Test: [40/79]	Acc@1 89.062 (91.749)	Acc@5 99.219 (99.543)
Test: [41/79]	Acc@1 89.844 (91.704)	Acc@5 98.438 (99.516)
Test: [42/79]	Acc@1 85.938 (91.570)	Acc@5 100.000 (99.528)
Test: [43/79]	Acc@1 90.625 (91.548)	Acc@5 100.000 (99.538)
Test: [44/79]	Acc@1 90.625 (91.528)	Acc@5 100.000 (99.549)
Test: [45/79]	Acc@1 94.531 (91.593)	Acc@5 100.000 (99.558)
Test: [46/79]	Acc@1 92.969 (91.622)	Acc@5 100.000 (99.568)
Test: [47/79]	Acc@1 92.969 (91.650)	Acc@5 100.000 (99.577)
Test: [48/79]	Acc@1 89.844 (91.614)	Acc@5 99.219 (99.570)
Test: [49/79]	Acc@1 88.281 (91.547)	Acc@5 100.000 (99.578)
Test: [50/79]	Acc@1 92.188 (91.559)	Acc@5 100.000 (99.586)
Test: [51/79]	Acc@1 89.844 (91.526)	Acc@5 100.000 (99.594)
Test: [52/79]	Acc@1 95.312 (91.598)	Acc@5 99.219 (99.587)
Test: [53/79]	Acc@1 93.750 (91.638)	Acc@5 100.000 (99.595)
Test: [54/79]	Acc@1 89.062 (91.591)	Acc@5 100.000 (99.602)
Test: [55/79]	Acc@1 89.844 (91.560)	Acc@5 99.219 (99.595)
Test: [56/79]	Acc@1 89.062 (91.516)	Acc@5 100.000 (99.603)
Test: [57/79]	Acc@1 92.969 (91.541)	Acc@5 100.000 (99.609)
Test: [58/79]	Acc@1 89.062 (91.499)	Acc@5 99.219 (99.603)
Test: [59/79]	Acc@1 90.625 (91.484)	Acc@5 100.000 (99.609)
Test: [60/79]	Acc@1 92.188 (91.496)	Acc@5 100.000 (99.616)
Test: [61/79]	Acc@1 90.625 (91.482)	Acc@5 100.000 (99.622)
Test: [62/79]	Acc@1 90.625 (91.468)	Acc@5 100.000 (99.628)
Test: [63/79]	Acc@1 89.844 (91.443)	Acc@5 99.219 (99.622)
Test: [64/79]	Acc@1 91.406 (91.442)	Acc@5 100.000 (99.627)
Test: [65/79]	Acc@1 94.531 (91.489)	Acc@5 100.000 (99.633)
Test: [66/79]	Acc@1 89.844 (91.465)	Acc@5 100.000 (99.639)
Test: [67/79]	Acc@1 92.969 (91.487)	Acc@5 100.000 (99.644)
Test: [68/79]	Acc@1 91.406 (91.486)	Acc@5 100.000 (99.649)
Test: [69/79]	Acc@1 89.062 (91.451)	Acc@5 100.000 (99.654)
Test: [70/79]	Acc@1 90.625 (91.439)	Acc@5 98.438 (99.637)
Test: [71/79]	Acc@1 95.312 (91.493)	Acc@5 100.000 (99.642)
Test: [72/79]	Acc@1 89.062 (91.460)	Acc@5 99.219 (99.636)
Test: [73/79]	Acc@1 96.094 (91.522)	Acc@5 100.000 (99.641)
Test: [74/79]	Acc@1 90.625 (91.510)	Acc@5 100.000 (99.646)
Test: [75/79]	Acc@1 86.719 (91.447)	Acc@5 100.000 (99.650)
Test: [76/79]	Acc@1 91.406 (91.447)	Acc@5 100.000 (99.655)
Test: [77/79]	Acc@1 90.625 (91.436)	Acc@5 99.219 (99.649)
Test: [78/79]	Acc@1 100.000 (91.450)	Acc@5 100.000 (99.650)
Top1 after quantization: 91.450, Top5 after quantization: 99.650

----------------------------------------------------------
resnet20 Quantization 1
2021年 07月 03日 星期六 10:14:31 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 20
Layer: conv1, layer shape: torch.Size([16, 3, 3, 3]), uncompressed layer size: 0.001648MB. 
layer shape (after reshape): torch.Size([27, 16])
Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([144, 32])
Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([288, 64])
Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
#################result####################
Compressed model size: 0.5661MB
Compress Coef: 1.82
Compressed time: 0.88s.
Test: [0/79]	Acc@1 92.969 (92.969)	Acc@5 99.219 (99.219)
Test: [1/79]	Acc@1 92.188 (92.578)	Acc@5 100.000 (99.609)
Test: [2/79]	Acc@1 92.969 (92.708)	Acc@5 100.000 (99.740)
Test: [3/79]	Acc@1 92.188 (92.578)	Acc@5 99.219 (99.609)
Test: [4/79]	Acc@1 91.406 (92.344)	Acc@5 99.219 (99.531)
Test: [5/79]	Acc@1 89.062 (91.797)	Acc@5 98.438 (99.349)
Test: [6/79]	Acc@1 91.406 (91.741)	Acc@5 99.219 (99.330)
Test: [7/79]	Acc@1 95.312 (92.188)	Acc@5 99.219 (99.316)
Test: [8/79]	Acc@1 93.750 (92.361)	Acc@5 100.000 (99.392)
Test: [9/79]	Acc@1 90.625 (92.188)	Acc@5 100.000 (99.453)
Test: [10/79]	Acc@1 89.062 (91.903)	Acc@5 100.000 (99.503)
Test: [11/79]	Acc@1 88.281 (91.602)	Acc@5 98.438 (99.414)
Test: [12/79]	Acc@1 89.844 (91.466)	Acc@5 100.000 (99.459)
Test: [13/79]	Acc@1 88.281 (91.239)	Acc@5 100.000 (99.498)
Test: [14/79]	Acc@1 89.062 (91.094)	Acc@5 100.000 (99.531)
Test: [15/79]	Acc@1 92.188 (91.162)	Acc@5 100.000 (99.561)
Test: [16/79]	Acc@1 94.531 (91.360)	Acc@5 100.000 (99.586)
Test: [17/79]	Acc@1 96.094 (91.623)	Acc@5 100.000 (99.609)
Test: [18/79]	Acc@1 92.188 (91.653)	Acc@5 100.000 (99.630)
Test: [19/79]	Acc@1 89.844 (91.562)	Acc@5 98.438 (99.570)
Test: [20/79]	Acc@1 93.750 (91.667)	Acc@5 98.438 (99.516)
Test: [21/79]	Acc@1 87.500 (91.477)	Acc@5 100.000 (99.538)
Test: [22/79]	Acc@1 96.094 (91.678)	Acc@5 100.000 (99.558)
Test: [23/79]	Acc@1 92.969 (91.732)	Acc@5 100.000 (99.577)
Test: [24/79]	Acc@1 89.062 (91.625)	Acc@5 100.000 (99.594)
Test: [25/79]	Acc@1 89.844 (91.556)	Acc@5 99.219 (99.579)
Test: [26/79]	Acc@1 91.406 (91.551)	Acc@5 100.000 (99.595)
Test: [27/79]	Acc@1 88.281 (91.434)	Acc@5 99.219 (99.581)
Test: [28/79]	Acc@1 91.406 (91.433)	Acc@5 100.000 (99.596)
Test: [29/79]	Acc@1 90.625 (91.406)	Acc@5 100.000 (99.609)
Test: [30/79]	Acc@1 89.062 (91.331)	Acc@5 100.000 (99.622)
Test: [31/79]	Acc@1 90.625 (91.309)	Acc@5 100.000 (99.634)
Test: [32/79]	Acc@1 91.406 (91.312)	Acc@5 99.219 (99.621)
Test: [33/79]	Acc@1 87.500 (91.199)	Acc@5 99.219 (99.609)
Test: [34/79]	Acc@1 90.625 (91.183)	Acc@5 99.219 (99.598)
Test: [35/79]	Acc@1 92.188 (91.211)	Acc@5 99.219 (99.588)
Test: [36/79]	Acc@1 90.625 (91.195)	Acc@5 99.219 (99.578)
Test: [37/79]	Acc@1 93.750 (91.262)	Acc@5 99.219 (99.568)
Test: [38/79]	Acc@1 89.844 (91.226)	Acc@5 100.000 (99.579)
Test: [39/79]	Acc@1 92.188 (91.250)	Acc@5 100.000 (99.590)
Test: [40/79]	Acc@1 92.969 (91.292)	Acc@5 100.000 (99.600)
Test: [41/79]	Acc@1 87.500 (91.202)	Acc@5 99.219 (99.591)
Test: [42/79]	Acc@1 88.281 (91.134)	Acc@5 100.000 (99.600)
Test: [43/79]	Acc@1 89.844 (91.104)	Acc@5 100.000 (99.609)
Test: [44/79]	Acc@1 91.406 (91.111)	Acc@5 98.438 (99.583)
Test: [45/79]	Acc@1 91.406 (91.118)	Acc@5 99.219 (99.575)
Test: [46/79]	Acc@1 94.531 (91.190)	Acc@5 100.000 (99.584)
Test: [47/79]	Acc@1 92.188 (91.211)	Acc@5 100.000 (99.593)
Test: [48/79]	Acc@1 94.531 (91.279)	Acc@5 100.000 (99.601)
Test: [49/79]	Acc@1 92.969 (91.312)	Acc@5 100.000 (99.609)
Test: [50/79]	Acc@1 92.969 (91.345)	Acc@5 100.000 (99.617)
Test: [51/79]	Acc@1 92.188 (91.361)	Acc@5 100.000 (99.624)
Test: [52/79]	Acc@1 92.969 (91.392)	Acc@5 100.000 (99.631)
Test: [53/79]	Acc@1 90.625 (91.377)	Acc@5 100.000 (99.638)
Test: [54/79]	Acc@1 89.844 (91.349)	Acc@5 100.000 (99.645)
Test: [55/79]	Acc@1 92.969 (91.378)	Acc@5 100.000 (99.651)
Test: [56/79]	Acc@1 87.500 (91.310)	Acc@5 99.219 (99.644)
Test: [57/79]	Acc@1 91.406 (91.312)	Acc@5 98.438 (99.623)
Test: [58/79]	Acc@1 94.531 (91.367)	Acc@5 100.000 (99.629)
Test: [59/79]	Acc@1 89.062 (91.328)	Acc@5 100.000 (99.635)
Test: [60/79]	Acc@1 96.094 (91.406)	Acc@5 100.000 (99.641)
Test: [61/79]	Acc@1 87.500 (91.343)	Acc@5 100.000 (99.647)
Test: [62/79]	Acc@1 92.188 (91.357)	Acc@5 100.000 (99.653)
Test: [63/79]	Acc@1 92.969 (91.382)	Acc@5 100.000 (99.658)
Test: [64/79]	Acc@1 91.406 (91.382)	Acc@5 100.000 (99.663)
Test: [65/79]	Acc@1 91.406 (91.383)	Acc@5 100.000 (99.669)
Test: [66/79]	Acc@1 88.281 (91.336)	Acc@5 99.219 (99.662)
Test: [67/79]	Acc@1 90.625 (91.326)	Acc@5 100.000 (99.667)
Test: [68/79]	Acc@1 95.312 (91.384)	Acc@5 99.219 (99.660)
Test: [69/79]	Acc@1 93.750 (91.417)	Acc@5 100.000 (99.665)
Test: [70/79]	Acc@1 92.969 (91.439)	Acc@5 98.438 (99.648)
Test: [71/79]	Acc@1 92.188 (91.450)	Acc@5 100.000 (99.653)
Test: [72/79]	Acc@1 89.062 (91.417)	Acc@5 100.000 (99.658)
Test: [73/79]	Acc@1 90.625 (91.406)	Acc@5 100.000 (99.662)
Test: [74/79]	Acc@1 90.625 (91.396)	Acc@5 98.438 (99.646)
Test: [75/79]	Acc@1 87.500 (91.345)	Acc@5 100.000 (99.650)
Test: [76/79]	Acc@1 89.062 (91.315)	Acc@5 100.000 (99.655)
Test: [77/79]	Acc@1 95.312 (91.366)	Acc@5 100.000 (99.659)
Test: [78/79]	Acc@1 81.250 (91.350)	Acc@5 100.000 (99.660)
Top1 after quantization: 91.350, Top5 after quantization: 99.660

----------------------------------------------------------
resnet20 Quantization 1
2021年 07月 03日 星期六 10:17:07 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 20
Layer: conv1, layer shape: torch.Size([16, 3, 3, 3]), uncompressed layer size: 0.001648MB. 
layer shape (after reshape): torch.Size([27, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.001312MB
Time cost:             0.31s

Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.004883MB
Time cost:             0.02s

Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.004883MB
Time cost:             0.02s

Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.004883MB
Time cost:             0.02s

Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.004883MB
Time cost:             0.03s

Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([144, 32])
Dictionary Words:      33
Blocks:                1
Compressed layer size: 0.011078MB
Time cost:             0.03s

Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      32
Blocks:                1
Compressed layer size: 0.019531MB
Time cost:             0.02s

Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      32
Blocks:                1
Compressed layer size: 0.019531MB
Time cost:             0.02s

Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      32
Blocks:                1
Compressed layer size: 0.019531MB
Time cost:             0.03s

Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      31
Blocks:                1
Compressed layer size: 0.018921MB
Time cost:             0.02s

Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      30
Blocks:                1
Compressed layer size: 0.018311MB
Time cost:             0.03s

Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([288, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.042297MB
Time cost:             0.03s

Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.076904MB
Time cost:             0.03s

Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.076904MB
Time cost:             0.03s

Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.076904MB
Time cost:             0.04s

Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.076904MB
Time cost:             0.04s

Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      60
Blocks:                1
Compressed layer size: 0.073242MB
Time cost:             0.04s

Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
Dictionary Words:      10
Blocks:                1
Compressed layer size: 0.001411MB
Time cost:             0.03s

#################result####################
Compressed model size: 0.5661MB
Compress Coef: 1.82
Compressed time: 0.84s.
Test: [0/79]	Acc@1 92.969 (92.969)	Acc@5 99.219 (99.219)
Test: [1/79]	Acc@1 92.188 (92.578)	Acc@5 100.000 (99.609)
Test: [2/79]	Acc@1 92.969 (92.708)	Acc@5 100.000 (99.740)
Test: [3/79]	Acc@1 92.188 (92.578)	Acc@5 99.219 (99.609)
Test: [4/79]	Acc@1 91.406 (92.344)	Acc@5 99.219 (99.531)
Test: [5/79]	Acc@1 89.062 (91.797)	Acc@5 98.438 (99.349)
Test: [6/79]	Acc@1 91.406 (91.741)	Acc@5 99.219 (99.330)
Test: [7/79]	Acc@1 95.312 (92.188)	Acc@5 99.219 (99.316)
Test: [8/79]	Acc@1 93.750 (92.361)	Acc@5 100.000 (99.392)
Test: [9/79]	Acc@1 90.625 (92.188)	Acc@5 100.000 (99.453)
Test: [10/79]	Acc@1 89.062 (91.903)	Acc@5 100.000 (99.503)
Test: [11/79]	Acc@1 88.281 (91.602)	Acc@5 98.438 (99.414)
Test: [12/79]	Acc@1 89.844 (91.466)	Acc@5 100.000 (99.459)
Test: [13/79]	Acc@1 88.281 (91.239)	Acc@5 100.000 (99.498)
Test: [14/79]	Acc@1 89.062 (91.094)	Acc@5 100.000 (99.531)
Test: [15/79]	Acc@1 92.188 (91.162)	Acc@5 100.000 (99.561)
Test: [16/79]	Acc@1 94.531 (91.360)	Acc@5 100.000 (99.586)
Test: [17/79]	Acc@1 96.094 (91.623)	Acc@5 100.000 (99.609)
Test: [18/79]	Acc@1 92.188 (91.653)	Acc@5 100.000 (99.630)
Test: [19/79]	Acc@1 89.844 (91.562)	Acc@5 98.438 (99.570)
Test: [20/79]	Acc@1 93.750 (91.667)	Acc@5 98.438 (99.516)
Test: [21/79]	Acc@1 87.500 (91.477)	Acc@5 100.000 (99.538)
Test: [22/79]	Acc@1 96.094 (91.678)	Acc@5 100.000 (99.558)
Test: [23/79]	Acc@1 92.969 (91.732)	Acc@5 100.000 (99.577)
Test: [24/79]	Acc@1 89.062 (91.625)	Acc@5 100.000 (99.594)
Test: [25/79]	Acc@1 89.844 (91.556)	Acc@5 99.219 (99.579)
Test: [26/79]	Acc@1 91.406 (91.551)	Acc@5 100.000 (99.595)
Test: [27/79]	Acc@1 88.281 (91.434)	Acc@5 99.219 (99.581)
Test: [28/79]	Acc@1 91.406 (91.433)	Acc@5 100.000 (99.596)
Test: [29/79]	Acc@1 90.625 (91.406)	Acc@5 100.000 (99.609)
Test: [30/79]	Acc@1 89.062 (91.331)	Acc@5 100.000 (99.622)
Test: [31/79]	Acc@1 90.625 (91.309)	Acc@5 100.000 (99.634)
Test: [32/79]	Acc@1 91.406 (91.312)	Acc@5 99.219 (99.621)
Test: [33/79]	Acc@1 87.500 (91.199)	Acc@5 99.219 (99.609)
Test: [34/79]	Acc@1 90.625 (91.183)	Acc@5 99.219 (99.598)
Test: [35/79]	Acc@1 92.188 (91.211)	Acc@5 99.219 (99.588)
Test: [36/79]	Acc@1 90.625 (91.195)	Acc@5 99.219 (99.578)
Test: [37/79]	Acc@1 93.750 (91.262)	Acc@5 99.219 (99.568)
Test: [38/79]	Acc@1 89.844 (91.226)	Acc@5 100.000 (99.579)
Test: [39/79]	Acc@1 92.188 (91.250)	Acc@5 100.000 (99.590)
Test: [40/79]	Acc@1 92.969 (91.292)	Acc@5 100.000 (99.600)
Test: [41/79]	Acc@1 87.500 (91.202)	Acc@5 99.219 (99.591)
Test: [42/79]	Acc@1 88.281 (91.134)	Acc@5 100.000 (99.600)
Test: [43/79]	Acc@1 89.844 (91.104)	Acc@5 100.000 (99.609)
Test: [44/79]	Acc@1 91.406 (91.111)	Acc@5 98.438 (99.583)
Test: [45/79]	Acc@1 91.406 (91.118)	Acc@5 99.219 (99.575)
Test: [46/79]	Acc@1 94.531 (91.190)	Acc@5 100.000 (99.584)
Test: [47/79]	Acc@1 92.188 (91.211)	Acc@5 100.000 (99.593)
Test: [48/79]	Acc@1 94.531 (91.279)	Acc@5 100.000 (99.601)
Test: [49/79]	Acc@1 92.969 (91.312)	Acc@5 100.000 (99.609)
Test: [50/79]	Acc@1 92.969 (91.345)	Acc@5 100.000 (99.617)
Test: [51/79]	Acc@1 92.188 (91.361)	Acc@5 100.000 (99.624)
Test: [52/79]	Acc@1 92.969 (91.392)	Acc@5 100.000 (99.631)
Test: [53/79]	Acc@1 90.625 (91.377)	Acc@5 100.000 (99.638)
Test: [54/79]	Acc@1 89.844 (91.349)	Acc@5 100.000 (99.645)
Test: [55/79]	Acc@1 92.969 (91.378)	Acc@5 100.000 (99.651)
Test: [56/79]	Acc@1 87.500 (91.310)	Acc@5 99.219 (99.644)
Test: [57/79]	Acc@1 91.406 (91.312)	Acc@5 98.438 (99.623)
Test: [58/79]	Acc@1 94.531 (91.367)	Acc@5 100.000 (99.629)
Test: [59/79]	Acc@1 89.062 (91.328)	Acc@5 100.000 (99.635)
Test: [60/79]	Acc@1 96.094 (91.406)	Acc@5 100.000 (99.641)
Test: [61/79]	Acc@1 87.500 (91.343)	Acc@5 100.000 (99.647)
Test: [62/79]	Acc@1 92.188 (91.357)	Acc@5 100.000 (99.653)
Test: [63/79]	Acc@1 92.969 (91.382)	Acc@5 100.000 (99.658)
Test: [64/79]	Acc@1 91.406 (91.382)	Acc@5 100.000 (99.663)
Test: [65/79]	Acc@1 91.406 (91.383)	Acc@5 100.000 (99.669)
Test: [66/79]	Acc@1 88.281 (91.336)	Acc@5 99.219 (99.662)
Test: [67/79]	Acc@1 90.625 (91.326)	Acc@5 100.000 (99.667)
Test: [68/79]	Acc@1 95.312 (91.384)	Acc@5 99.219 (99.660)
Test: [69/79]	Acc@1 93.750 (91.417)	Acc@5 100.000 (99.665)
Test: [70/79]	Acc@1 92.969 (91.439)	Acc@5 98.438 (99.648)
Test: [71/79]	Acc@1 92.188 (91.450)	Acc@5 100.000 (99.653)
Test: [72/79]	Acc@1 89.062 (91.417)	Acc@5 100.000 (99.658)
Test: [73/79]	Acc@1 90.625 (91.406)	Acc@5 100.000 (99.662)
Test: [74/79]	Acc@1 90.625 (91.396)	Acc@5 98.438 (99.646)
Test: [75/79]	Acc@1 87.500 (91.345)	Acc@5 100.000 (99.650)
Test: [76/79]	Acc@1 89.062 (91.315)	Acc@5 100.000 (99.655)
Test: [77/79]	Acc@1 95.312 (91.366)	Acc@5 100.000 (99.659)
Test: [78/79]	Acc@1 81.250 (91.350)	Acc@5 100.000 (99.660)
Top1 after quantization: 91.350, Top5 after quantization: 99.660

----------------------------------------------------------
resnet20 Quantization 1
2021年 07月 03日 星期六 10:25:53 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 20
Layer: conv1, layer shape: torch.Size([16, 3, 3, 3]), uncompressed layer size: 0.001648MB. 
layer shape (after reshape): torch.Size([27, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.001312MB
Time cost:             0.29s

Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

Layer: layer1.1.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.004883MB
Time cost:             0.02s

Layer: layer1.1.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.004883MB
Time cost:             0.02s

Layer: layer1.2.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.004883MB
Time cost:             0.02s

Layer: layer1.2.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.004883MB
Time cost:             0.02s

Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([144, 32])
Dictionary Words:      33
Blocks:                1
Compressed layer size: 0.011078MB
Time cost:             0.03s

Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      32
Blocks:                1
Compressed layer size: 0.019531MB
Time cost:             0.02s

Layer: layer2.1.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      32
Blocks:                1
Compressed layer size: 0.019531MB
Time cost:             0.02s

Layer: layer2.1.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      32
Blocks:                1
Compressed layer size: 0.019531MB
Time cost:             0.02s

Layer: layer2.2.conv1, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      31
Blocks:                1
Compressed layer size: 0.018921MB
Time cost:             0.02s

Layer: layer2.2.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      30
Blocks:                1
Compressed layer size: 0.018311MB
Time cost:             0.03s

Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([288, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.042297MB
Time cost:             0.03s

Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.076904MB
Time cost:             0.03s

Layer: layer3.1.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.076904MB
Time cost:             0.03s

Layer: layer3.1.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.076904MB
Time cost:             0.03s

Layer: layer3.2.conv1, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.076904MB
Time cost:             0.03s

Layer: layer3.2.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      60
Blocks:                1
Compressed layer size: 0.073242MB
Time cost:             0.04s

Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
Dictionary Words:      10
Blocks:                1
Compressed layer size: 0.001411MB
Time cost:             0.03s

#################result####################
Compressed model size: 0.5661MB
Compress Coef: 1.82
Compressed time: 0.80s.
Test: [0/79]	Acc@1 92.969 (92.969)	Acc@5 99.219 (99.219)
Test: [1/79]	Acc@1 92.188 (92.578)	Acc@5 100.000 (99.609)
Test: [2/79]	Acc@1 92.969 (92.708)	Acc@5 100.000 (99.740)
Test: [3/79]	Acc@1 92.188 (92.578)	Acc@5 99.219 (99.609)
Test: [4/79]	Acc@1 91.406 (92.344)	Acc@5 99.219 (99.531)
Test: [5/79]	Acc@1 89.062 (91.797)	Acc@5 98.438 (99.349)
Test: [6/79]	Acc@1 91.406 (91.741)	Acc@5 99.219 (99.330)
Test: [7/79]	Acc@1 95.312 (92.188)	Acc@5 99.219 (99.316)
Test: [8/79]	Acc@1 93.750 (92.361)	Acc@5 100.000 (99.392)
Test: [9/79]	Acc@1 90.625 (92.188)	Acc@5 100.000 (99.453)
Test: [10/79]	Acc@1 89.062 (91.903)	Acc@5 100.000 (99.503)
Test: [11/79]	Acc@1 88.281 (91.602)	Acc@5 98.438 (99.414)
Test: [12/79]	Acc@1 89.844 (91.466)	Acc@5 100.000 (99.459)
Test: [13/79]	Acc@1 88.281 (91.239)	Acc@5 100.000 (99.498)
Test: [14/79]	Acc@1 89.062 (91.094)	Acc@5 100.000 (99.531)
Test: [15/79]	Acc@1 92.188 (91.162)	Acc@5 100.000 (99.561)
Test: [16/79]	Acc@1 94.531 (91.360)	Acc@5 100.000 (99.586)
Test: [17/79]	Acc@1 96.094 (91.623)	Acc@5 100.000 (99.609)
Test: [18/79]	Acc@1 92.188 (91.653)	Acc@5 100.000 (99.630)
Test: [19/79]	Acc@1 89.844 (91.562)	Acc@5 98.438 (99.570)
Test: [20/79]	Acc@1 93.750 (91.667)	Acc@5 98.438 (99.516)
Test: [21/79]	Acc@1 87.500 (91.477)	Acc@5 100.000 (99.538)
Test: [22/79]	Acc@1 96.094 (91.678)	Acc@5 100.000 (99.558)
Test: [23/79]	Acc@1 92.969 (91.732)	Acc@5 100.000 (99.577)
Test: [24/79]	Acc@1 89.062 (91.625)	Acc@5 100.000 (99.594)
Test: [25/79]	Acc@1 89.844 (91.556)	Acc@5 99.219 (99.579)
Test: [26/79]	Acc@1 91.406 (91.551)	Acc@5 100.000 (99.595)
Test: [27/79]	Acc@1 88.281 (91.434)	Acc@5 99.219 (99.581)
Test: [28/79]	Acc@1 91.406 (91.433)	Acc@5 100.000 (99.596)
Test: [29/79]	Acc@1 90.625 (91.406)	Acc@5 100.000 (99.609)
Test: [30/79]	Acc@1 89.062 (91.331)	Acc@5 100.000 (99.622)
Test: [31/79]	Acc@1 90.625 (91.309)	Acc@5 100.000 (99.634)
Test: [32/79]	Acc@1 91.406 (91.312)	Acc@5 99.219 (99.621)
Test: [33/79]	Acc@1 87.500 (91.199)	Acc@5 99.219 (99.609)
Test: [34/79]	Acc@1 90.625 (91.183)	Acc@5 99.219 (99.598)
Test: [35/79]	Acc@1 92.188 (91.211)	Acc@5 99.219 (99.588)
Test: [36/79]	Acc@1 90.625 (91.195)	Acc@5 99.219 (99.578)
Test: [37/79]	Acc@1 93.750 (91.262)	Acc@5 99.219 (99.568)
Test: [38/79]	Acc@1 89.844 (91.226)	Acc@5 100.000 (99.579)
Test: [39/79]	Acc@1 92.188 (91.250)	Acc@5 100.000 (99.590)
Test: [40/79]	Acc@1 92.969 (91.292)	Acc@5 100.000 (99.600)
Test: [41/79]	Acc@1 87.500 (91.202)	Acc@5 99.219 (99.591)
Test: [42/79]	Acc@1 88.281 (91.134)	Acc@5 100.000 (99.600)
Test: [43/79]	Acc@1 89.844 (91.104)	Acc@5 100.000 (99.609)
Test: [44/79]	Acc@1 91.406 (91.111)	Acc@5 98.438 (99.583)
Test: [45/79]	Acc@1 91.406 (91.118)	Acc@5 99.219 (99.575)
Test: [46/79]	Acc@1 94.531 (91.190)	Acc@5 100.000 (99.584)
Test: [47/79]	Acc@1 92.188 (91.211)	Acc@5 100.000 (99.593)
Test: [48/79]	Acc@1 94.531 (91.279)	Acc@5 100.000 (99.601)
Test: [49/79]	Acc@1 92.969 (91.312)	Acc@5 100.000 (99.609)
Test: [50/79]	Acc@1 92.969 (91.345)	Acc@5 100.000 (99.617)
Test: [51/79]	Acc@1 92.188 (91.361)	Acc@5 100.000 (99.624)
Test: [52/79]	Acc@1 92.969 (91.392)	Acc@5 100.000 (99.631)
Test: [53/79]	Acc@1 90.625 (91.377)	Acc@5 100.000 (99.638)
Test: [54/79]	Acc@1 89.844 (91.349)	Acc@5 100.000 (99.645)
Test: [55/79]	Acc@1 92.969 (91.378)	Acc@5 100.000 (99.651)
Test: [56/79]	Acc@1 87.500 (91.310)	Acc@5 99.219 (99.644)
Test: [57/79]	Acc@1 91.406 (91.312)	Acc@5 98.438 (99.623)
Test: [58/79]	Acc@1 94.531 (91.367)	Acc@5 100.000 (99.629)
Test: [59/79]	Acc@1 89.062 (91.328)	Acc@5 100.000 (99.635)
Test: [60/79]	Acc@1 96.094 (91.406)	Acc@5 100.000 (99.641)
Test: [61/79]	Acc@1 87.500 (91.343)	Acc@5 100.000 (99.647)
Test: [62/79]	Acc@1 92.188 (91.357)	Acc@5 100.000 (99.653)
Test: [63/79]	Acc@1 92.969 (91.382)	Acc@5 100.000 (99.658)
Test: [64/79]	Acc@1 91.406 (91.382)	Acc@5 100.000 (99.663)
Test: [65/79]	Acc@1 91.406 (91.383)	Acc@5 100.000 (99.669)
Test: [66/79]	Acc@1 88.281 (91.336)	Acc@5 99.219 (99.662)
Test: [67/79]	Acc@1 90.625 (91.326)	Acc@5 100.000 (99.667)
Test: [68/79]	Acc@1 95.312 (91.384)	Acc@5 99.219 (99.660)
Test: [69/79]	Acc@1 93.750 (91.417)	Acc@5 100.000 (99.665)
Test: [70/79]	Acc@1 92.969 (91.439)	Acc@5 98.438 (99.648)
Test: [71/79]	Acc@1 92.188 (91.450)	Acc@5 100.000 (99.653)
Test: [72/79]	Acc@1 89.062 (91.417)	Acc@5 100.000 (99.658)
Test: [73/79]	Acc@1 90.625 (91.406)	Acc@5 100.000 (99.662)
Test: [74/79]	Acc@1 90.625 (91.396)	Acc@5 98.438 (99.646)
Test: [75/79]	Acc@1 87.500 (91.345)	Acc@5 100.000 (99.650)
Test: [76/79]	Acc@1 89.062 (91.315)	Acc@5 100.000 (99.655)
Test: [77/79]	Acc@1 95.312 (91.366)	Acc@5 100.000 (99.659)
Test: [78/79]	Acc@1 81.250 (91.350)	Acc@5 100.000 (99.660)
Top1 after quantization: 91.350, Top5 after quantization: 99.660

----------------------------------------------------------
resnet20 Quantization 1
2021年 07月 03日 星期六 11:05:02 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 20
#################result####################
Compressed model size: 0.0053MB
Compress Coef: 194.60
Compressed time: 0.00s.
Test: [0/79]	Acc@1 88.281 (88.281)	Acc@5 99.219 (99.219)
Test: [1/79]	Acc@1 92.969 (90.625)	Acc@5 100.000 (99.609)
Test: [2/79]	Acc@1 88.281 (89.844)	Acc@5 99.219 (99.479)
Test: [3/79]	Acc@1 93.750 (90.820)	Acc@5 99.219 (99.414)
Test: [4/79]	Acc@1 89.062 (90.469)	Acc@5 99.219 (99.375)
Test: [5/79]	Acc@1 90.625 (90.495)	Acc@5 100.000 (99.479)
Test: [6/79]	Acc@1 90.625 (90.513)	Acc@5 100.000 (99.554)
Test: [7/79]	Acc@1 92.188 (90.723)	Acc@5 100.000 (99.609)
Test: [8/79]	Acc@1 89.062 (90.538)	Acc@5 98.438 (99.479)
Test: [9/79]	Acc@1 91.406 (90.625)	Acc@5 100.000 (99.531)
Test: [10/79]	Acc@1 92.969 (90.838)	Acc@5 99.219 (99.503)
Test: [11/79]	Acc@1 89.844 (90.755)	Acc@5 97.656 (99.349)
Test: [12/79]	Acc@1 92.969 (90.925)	Acc@5 100.000 (99.399)
Test: [13/79]	Acc@1 88.281 (90.737)	Acc@5 100.000 (99.442)
Test: [14/79]	Acc@1 92.188 (90.833)	Acc@5 100.000 (99.479)
Test: [15/79]	Acc@1 89.844 (90.771)	Acc@5 100.000 (99.512)
Test: [16/79]	Acc@1 89.062 (90.671)	Acc@5 99.219 (99.494)
Test: [17/79]	Acc@1 93.750 (90.842)	Acc@5 100.000 (99.523)
Test: [18/79]	Acc@1 93.750 (90.995)	Acc@5 100.000 (99.548)
Test: [19/79]	Acc@1 88.281 (90.859)	Acc@5 99.219 (99.531)
Test: [20/79]	Acc@1 91.406 (90.885)	Acc@5 100.000 (99.554)
Test: [21/79]	Acc@1 93.750 (91.016)	Acc@5 100.000 (99.574)
Test: [22/79]	Acc@1 87.500 (90.863)	Acc@5 98.438 (99.524)
Test: [23/79]	Acc@1 94.531 (91.016)	Acc@5 100.000 (99.544)
Test: [24/79]	Acc@1 89.844 (90.969)	Acc@5 100.000 (99.562)
Test: [25/79]	Acc@1 93.750 (91.076)	Acc@5 97.656 (99.489)
Test: [26/79]	Acc@1 89.844 (91.030)	Acc@5 99.219 (99.479)
Test: [27/79]	Acc@1 90.625 (91.016)	Acc@5 100.000 (99.498)
Test: [28/79]	Acc@1 94.531 (91.137)	Acc@5 100.000 (99.515)
Test: [29/79]	Acc@1 96.094 (91.302)	Acc@5 100.000 (99.531)
Test: [30/79]	Acc@1 90.625 (91.280)	Acc@5 100.000 (99.546)
Test: [31/79]	Acc@1 89.062 (91.211)	Acc@5 100.000 (99.561)
Test: [32/79]	Acc@1 92.969 (91.264)	Acc@5 100.000 (99.574)
Test: [33/79]	Acc@1 89.844 (91.222)	Acc@5 100.000 (99.586)
Test: [34/79]	Acc@1 93.750 (91.295)	Acc@5 99.219 (99.576)
Test: [35/79]	Acc@1 92.969 (91.341)	Acc@5 100.000 (99.588)
Test: [36/79]	Acc@1 92.188 (91.364)	Acc@5 100.000 (99.599)
Test: [37/79]	Acc@1 89.844 (91.324)	Acc@5 100.000 (99.609)
Test: [38/79]	Acc@1 89.844 (91.286)	Acc@5 99.219 (99.599)
Test: [39/79]	Acc@1 94.531 (91.367)	Acc@5 100.000 (99.609)
Test: [40/79]	Acc@1 92.969 (91.406)	Acc@5 100.000 (99.619)
Test: [41/79]	Acc@1 92.188 (91.425)	Acc@5 99.219 (99.609)
Test: [42/79]	Acc@1 94.531 (91.497)	Acc@5 100.000 (99.618)
Test: [43/79]	Acc@1 92.188 (91.513)	Acc@5 100.000 (99.627)
Test: [44/79]	Acc@1 92.188 (91.528)	Acc@5 100.000 (99.635)
Test: [45/79]	Acc@1 89.062 (91.474)	Acc@5 99.219 (99.626)
Test: [46/79]	Acc@1 92.969 (91.506)	Acc@5 100.000 (99.634)
Test: [47/79]	Acc@1 89.844 (91.471)	Acc@5 100.000 (99.642)
Test: [48/79]	Acc@1 93.750 (91.518)	Acc@5 100.000 (99.649)
Test: [49/79]	Acc@1 91.406 (91.516)	Acc@5 100.000 (99.656)
Test: [50/79]	Acc@1 92.188 (91.529)	Acc@5 99.219 (99.648)
Test: [51/79]	Acc@1 92.969 (91.556)	Acc@5 100.000 (99.654)
Test: [52/79]	Acc@1 89.844 (91.524)	Acc@5 100.000 (99.661)
Test: [53/79]	Acc@1 91.406 (91.522)	Acc@5 100.000 (99.667)
Test: [54/79]	Acc@1 89.844 (91.491)	Acc@5 100.000 (99.673)
Test: [55/79]	Acc@1 94.531 (91.546)	Acc@5 100.000 (99.679)
Test: [56/79]	Acc@1 90.625 (91.530)	Acc@5 100.000 (99.685)
Test: [57/79]	Acc@1 89.844 (91.501)	Acc@5 100.000 (99.690)
Test: [58/79]	Acc@1 94.531 (91.552)	Acc@5 100.000 (99.695)
Test: [59/79]	Acc@1 92.969 (91.576)	Acc@5 99.219 (99.688)
Test: [60/79]	Acc@1 92.969 (91.598)	Acc@5 99.219 (99.680)
Test: [61/79]	Acc@1 92.969 (91.620)	Acc@5 100.000 (99.685)
Test: [62/79]	Acc@1 90.625 (91.605)	Acc@5 98.438 (99.665)
Test: [63/79]	Acc@1 92.969 (91.626)	Acc@5 100.000 (99.670)
Test: [64/79]	Acc@1 89.844 (91.599)	Acc@5 100.000 (99.675)
Test: [65/79]	Acc@1 88.281 (91.548)	Acc@5 100.000 (99.680)
Test: [66/79]	Acc@1 92.969 (91.569)	Acc@5 100.000 (99.685)
Test: [67/79]	Acc@1 92.969 (91.590)	Acc@5 100.000 (99.690)
Test: [68/79]	Acc@1 89.062 (91.553)	Acc@5 100.000 (99.694)
Test: [69/79]	Acc@1 90.625 (91.540)	Acc@5 100.000 (99.699)
Test: [70/79]	Acc@1 89.062 (91.505)	Acc@5 99.219 (99.692)
Test: [71/79]	Acc@1 87.500 (91.450)	Acc@5 99.219 (99.685)
Test: [72/79]	Acc@1 92.188 (91.460)	Acc@5 100.000 (99.690)
Test: [73/79]	Acc@1 91.406 (91.459)	Acc@5 99.219 (99.683)
Test: [74/79]	Acc@1 94.531 (91.500)	Acc@5 98.438 (99.667)
Test: [75/79]	Acc@1 93.750 (91.530)	Acc@5 98.438 (99.650)
Test: [76/79]	Acc@1 86.719 (91.467)	Acc@5 99.219 (99.645)
Test: [77/79]	Acc@1 91.406 (91.466)	Acc@5 100.000 (99.649)
Test: [78/79]	Acc@1 100.000 (91.480)	Acc@5 100.000 (99.650)
Top1 after quantization: 91.480, Top5 after quantization: 99.650

----------------------------------------------------------
resnet20 Quantization 1
2021年 07月 03日 星期六 11:06:15 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 20
Layer: conv1, layer shape: torch.Size([16, 3, 3, 3]), uncompressed layer size: 0.001648MB. 
layer shape (after reshape): torch.Size([27, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.001312MB
Time cost:             0.29s

Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

----------------------------------------------------------
resnet20 Quantization 1
2021年 07月 03日 星期六 11:07:09 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 20
Layer: conv1, layer shape: torch.Size([16, 3, 3, 3]), uncompressed layer size: 0.001648MB. 
layer shape (after reshape): torch.Size([27, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.001312MB
Time cost:             0.29s

Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

Layer: layer1.1.conv2, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 32])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.005371MB
Time cost:             0.03s

Layer: layer1.2.conv2, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 32])
----------------------------------------------------------
resnet20 Quantization 1
2021年 07月 03日 星期六 11:08:25 CST
---------------Dataset: cifar10--------------
Files already downloaded and verified
Files already downloaded and verified
layer number: 20
Layer: conv1, layer shape: torch.Size([16, 3, 3, 3]), uncompressed layer size: 0.001648MB. 
layer shape (after reshape): torch.Size([27, 16])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.001312MB
Time cost:             0.30s

Layer: layer1.0.conv1, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

Layer: layer1.0.conv2, layer shape: torch.Size([16, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 16])
Dictionary Words:      14
Blocks:                1
Compressed layer size: 0.004272MB
Time cost:             0.02s

Layer: layer1.1.conv2, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 32])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.005371MB
Time cost:             0.03s

Layer: layer1.2.conv2, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.008789MB. 
layer shape (after reshape): torch.Size([144, 32])
Dictionary Words:      16
Blocks:                1
Compressed layer size: 0.005371MB
Time cost:             0.03s

Layer: layer2.0.conv1, layer shape: torch.Size([32, 16, 3, 3]), uncompressed layer size: 0.017578MB. 
layer shape (after reshape): torch.Size([144, 32])
Dictionary Words:      33
Blocks:                1
Compressed layer size: 0.011078MB
Time cost:             0.03s

Layer: layer2.0.conv2, layer shape: torch.Size([32, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 32])
Dictionary Words:      32
Blocks:                1
Compressed layer size: 0.019531MB
Time cost:             0.02s

Layer: layer2.1.conv2, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 64])
Dictionary Words:      32
Blocks:                1
Compressed layer size: 0.021484MB
Time cost:             0.03s

Layer: layer2.2.conv2, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.035156MB. 
layer shape (after reshape): torch.Size([288, 64])
Dictionary Words:      30
Blocks:                1
Compressed layer size: 0.020142MB
Time cost:             0.03s

Layer: layer3.0.conv1, layer shape: torch.Size([64, 32, 3, 3]), uncompressed layer size: 0.070312MB. 
layer shape (after reshape): torch.Size([288, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.042297MB
Time cost:             0.03s

Layer: layer3.0.conv2, layer shape: torch.Size([64, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 64])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.076904MB
Time cost:             0.03s

Layer: layer3.1.conv2, layer shape: torch.Size([128, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 128])
Dictionary Words:      63
Blocks:                1
Compressed layer size: 0.084595MB
Time cost:             0.04s

Layer: layer3.2.conv2, layer shape: torch.Size([128, 64, 3, 3]), uncompressed layer size: 0.140625MB. 
layer shape (after reshape): torch.Size([576, 128])
Dictionary Words:      60
Blocks:                1
Compressed layer size: 0.080566MB
Time cost:             0.04s

Layer: linear, layer shape: torch.Size([10, 64]), uncompressed layer size: 0.002441MB. 
layer shape (after reshape): torch.Size([64, 10])
Dictionary Words:      10
Blocks:                1
Compressed layer size: 0.001411MB
Time cost:             0.03s

#################result####################
Compressed model size: 0.3839MB
Compress Coef: 2.68
Compressed time: 0.68s.
Test: [0/79]	Acc@1 92.188 (92.188)	Acc@5 100.000 (100.000)
Test: [1/79]	Acc@1 88.281 (90.234)	Acc@5 100.000 (100.000)
Test: [2/79]	Acc@1 89.844 (90.104)	Acc@5 99.219 (99.740)
Test: [3/79]	Acc@1 93.750 (91.016)	Acc@5 100.000 (99.805)
Test: [4/79]	Acc@1 91.406 (91.094)	Acc@5 99.219 (99.688)
Test: [5/79]	Acc@1 94.531 (91.667)	Acc@5 100.000 (99.740)
Test: [6/79]	Acc@1 95.312 (92.188)	Acc@5 100.000 (99.777)
Test: [7/79]	Acc@1 94.531 (92.480)	Acc@5 100.000 (99.805)
Test: [8/79]	Acc@1 89.062 (92.101)	Acc@5 100.000 (99.826)
Test: [9/79]	Acc@1 89.062 (91.797)	Acc@5 99.219 (99.766)
Test: [10/79]	Acc@1 92.969 (91.903)	Acc@5 99.219 (99.716)
Test: [11/79]	Acc@1 91.406 (91.862)	Acc@5 99.219 (99.674)
Test: [12/79]	Acc@1 90.625 (91.767)	Acc@5 100.000 (99.700)
Test: [13/79]	Acc@1 92.969 (91.853)	Acc@5 100.000 (99.721)
Test: [14/79]	Acc@1 96.094 (92.135)	Acc@5 100.000 (99.740)
Test: [15/79]	Acc@1 89.062 (91.943)	Acc@5 98.438 (99.658)
Test: [16/79]	Acc@1 89.062 (91.774)	Acc@5 100.000 (99.678)
Test: [17/79]	Acc@1 91.406 (91.753)	Acc@5 100.000 (99.696)
Test: [18/79]	Acc@1 91.406 (91.735)	Acc@5 100.000 (99.712)
Test: [19/79]	Acc@1 93.750 (91.836)	Acc@5 100.000 (99.727)
Test: [20/79]	Acc@1 92.969 (91.890)	Acc@5 98.438 (99.665)
Test: [21/79]	Acc@1 88.281 (91.726)	Acc@5 98.438 (99.609)
Test: [22/79]	Acc@1 89.062 (91.610)	Acc@5 99.219 (99.592)
Test: [23/79]	Acc@1 96.094 (91.797)	Acc@5 99.219 (99.577)
Test: [24/79]	Acc@1 91.406 (91.781)	Acc@5 99.219 (99.562)
Test: [25/79]	Acc@1 94.531 (91.887)	Acc@5 99.219 (99.549)
Test: [26/79]	Acc@1 92.188 (91.898)	Acc@5 100.000 (99.566)
Test: [27/79]	Acc@1 92.969 (91.936)	Acc@5 100.000 (99.581)
Test: [28/79]	Acc@1 89.062 (91.837)	Acc@5 99.219 (99.569)
Test: [29/79]	Acc@1 92.188 (91.849)	Acc@5 100.000 (99.583)
Test: [30/79]	Acc@1 92.188 (91.860)	Acc@5 100.000 (99.597)
Test: [31/79]	Acc@1 92.969 (91.895)	Acc@5 100.000 (99.609)
Test: [32/79]	Acc@1 92.188 (91.903)	Acc@5 99.219 (99.598)
Test: [33/79]	Acc@1 90.625 (91.866)	Acc@5 99.219 (99.586)
Test: [34/79]	Acc@1 91.406 (91.853)	Acc@5 100.000 (99.598)
Test: [35/79]	Acc@1 88.281 (91.753)	Acc@5 98.438 (99.566)
Test: [36/79]	Acc@1 93.750 (91.807)	Acc@5 100.000 (99.578)
Test: [37/79]	Acc@1 95.312 (91.900)	Acc@5 99.219 (99.568)
Test: [38/79]	Acc@1 91.406 (91.887)	Acc@5 100.000 (99.579)
Test: [39/79]	Acc@1 94.531 (91.953)	Acc@5 100.000 (99.590)
Test: [40/79]	Acc@1 87.500 (91.845)	Acc@5 100.000 (99.600)
Test: [41/79]	Acc@1 90.625 (91.815)	Acc@5 100.000 (99.609)
Test: [42/79]	Acc@1 93.750 (91.860)	Acc@5 100.000 (99.618)
Test: [43/79]	Acc@1 89.062 (91.797)	Acc@5 100.000 (99.627)
Test: [44/79]	Acc@1 91.406 (91.788)	Acc@5 100.000 (99.635)
Test: [45/79]	Acc@1 92.188 (91.797)	Acc@5 100.000 (99.643)
Test: [46/79]	Acc@1 87.500 (91.705)	Acc@5 99.219 (99.634)
Test: [47/79]	Acc@1 91.406 (91.699)	Acc@5 100.000 (99.642)
Test: [48/79]	Acc@1 92.969 (91.725)	Acc@5 98.438 (99.617)
Test: [49/79]	Acc@1 90.625 (91.703)	Acc@5 100.000 (99.625)
Test: [50/79]	Acc@1 89.062 (91.651)	Acc@5 100.000 (99.632)
Test: [51/79]	Acc@1 90.625 (91.632)	Acc@5 100.000 (99.639)
Test: [52/79]	Acc@1 93.750 (91.672)	Acc@5 99.219 (99.631)
Test: [53/79]	Acc@1 88.281 (91.609)	Acc@5 99.219 (99.624)
Test: [54/79]	Acc@1 92.969 (91.634)	Acc@5 100.000 (99.631)
Test: [55/79]	Acc@1 91.406 (91.629)	Acc@5 99.219 (99.623)
Test: [56/79]	Acc@1 88.281 (91.571)	Acc@5 99.219 (99.616)
Test: [57/79]	Acc@1 89.062 (91.527)	Acc@5 99.219 (99.609)
Test: [58/79]	Acc@1 94.531 (91.578)	Acc@5 100.000 (99.616)
Test: [59/79]	Acc@1 88.281 (91.523)	Acc@5 100.000 (99.622)
Test: [60/79]	Acc@1 86.719 (91.445)	Acc@5 99.219 (99.616)
Test: [61/79]	Acc@1 91.406 (91.444)	Acc@5 100.000 (99.622)
Test: [62/79]	Acc@1 89.062 (91.406)	Acc@5 100.000 (99.628)
Test: [63/79]	Acc@1 93.750 (91.443)	Acc@5 100.000 (99.634)
Test: [64/79]	Acc@1 91.406 (91.442)	Acc@5 99.219 (99.627)
Test: [65/79]	Acc@1 90.625 (91.430)	Acc@5 100.000 (99.633)
Test: [66/79]	Acc@1 87.500 (91.371)	Acc@5 100.000 (99.639)
Test: [67/79]	Acc@1 95.312 (91.429)	Acc@5 100.000 (99.644)
Test: [68/79]	Acc@1 89.844 (91.406)	Acc@5 100.000 (99.649)
Test: [69/79]	Acc@1 92.188 (91.417)	Acc@5 99.219 (99.643)
Test: [70/79]	Acc@1 91.406 (91.417)	Acc@5 100.000 (99.648)
Test: [71/79]	Acc@1 91.406 (91.417)	Acc@5 99.219 (99.642)
Test: [72/79]	Acc@1 92.969 (91.438)	Acc@5 100.000 (99.647)
Test: [73/79]	Acc@1 90.625 (91.427)	Acc@5 100.000 (99.652)
Test: [74/79]	Acc@1 94.531 (91.469)	Acc@5 100.000 (99.656)
Test: [75/79]	Acc@1 91.406 (91.468)	Acc@5 98.438 (99.640)
Test: [76/79]	Acc@1 93.750 (91.498)	Acc@5 100.000 (99.645)
Test: [77/79]	Acc@1 90.625 (91.486)	Acc@5 100.000 (99.649)
Test: [78/79]	Acc@1 93.750 (91.490)	Acc@5 100.000 (99.650)
Top1 after quantization: 91.490, Top5 after quantization: 99.650

----------------------------------------------------------
Dataset: cifar10
Files already downloaded and verified
Files already downloaded and verified
Model: resnet20_dc
Dataset: cifar10
Files already downloaded and verified
Files already downloaded and verified
Model: resnet20_dc
